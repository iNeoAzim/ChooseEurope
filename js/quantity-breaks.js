if(customElements.get("foxkit-quantity-breaks")||customElements.define("foxkit-quantity-breaks",class extends HTMLElement{constructor(){super(),window.FoxKitThemeHelperEnabled&&(this.selectors={buttons:[".btn-add"],submitButton:".f-quantity-breaks__button-add",choices:["foxkit-quantity-breaks-choice"]},this.classes={adding:"adding",loading:"foxkit-spinner--loading"},this.available=this.dataset.available,"true"===this.available&&(this.productId=Number(this.dataset.productId),this.selectedVariantId=Number(this.dataset.selectedVariantId),this.collections=this.dataset.collections,this.productForm=this.closest(".shopify-section").querySelector(`${FoxKitV2.selectors.productForm}:not([class*="installment"]):not([id*="installment"])`),this.blockId=this.dataset.blockId,this.mCartDrawer=document.querySelector("m-cart-drawer"),this.zCartDrawer=document.querySelector("drawer-component#Drawer-Cart cart-drawer"),this.sCartDrawer=document.querySelector("cart-drawer"),this.productJson=JSON.parse(this.querySelector("[data-product-json]").innerHTML),this.selectedIndex=0,this.fetchData()))}async fetchData(){let t={plg:"quantityDiscount"};this.productId&&(t.productId=this.productId),this.collections&&(t.collectionIds=this.collections.split(",").filter(Boolean)),this.config=await FoxKitV2.Helpers.getPluginData(t),this.cart=await FoxKitV2.getCart(),this.selectedVariant=this.productJson.variants.find((t=>t.id===this.selectedVariantId)),this.init()}init(){if(!this.config||!this.config.active)return this.destroyElement(),!1;this.plugin=this.dataset.plugin,this.selectedIndex=this.config.default_selected||0,this.activeDiscount=this.config.discounts[this.selectedIndex]||this.config.discounts[0],this.appendChild(this.renderComponent()),this.domNodes=FoxKitV2.Utils.queryDomNodes(this.selectors,this),this.setupEvents(),this.subscribeEvents(),this.updateButtonStatus(),"card"===this.config.layout&&this.updateQuantity(),window.FoxKitSettings.showWaterMark&&this.renderWtm(),this.style.setProperty("--foxkit-quantity-card-radius",`${this.config.card_radius}px`)}setupEvents(){FoxKitV2.Utils.addEventDelegate({selector:this.selectors.buttons[0],context:this,handler:(t,e)=>{t.preventDefault();if((this.productForm?window.FoxKitV2.Utils.productFormCheck(this.productForm):[]).length>0)FoxKitModules.Notification.show({target:this,method:"appendChild",type:"warning",message:window.__i18n.tr("required_fields")||"Please fill all the required fields(*) before Add to cart!"});else{this.toggleSpinner(e,!0);const t=e.dataset.quantity,i=this.getQuantityToAdd(Number(t));this.addToCartFromForm(i,e)}}}),this.addEventListener("change",this.handleChange.bind(this)),this.domNodes.submitButton&&this.domNodes.submitButton.addEventListener("click",this.handleSubmit.bind(this))}subscribeEvents(){FoxkitEvents.subscribe("ON_CART_UPDATE",(t=>this.updateButtonStatus(t))),FoxkitEvents.subscribe("ON_ITEM_ADDED",(()=>{this.domNodes.submitButton&&this.domNodes.submitButton.classList.remove(this.classes.loading)})),FoxkitEvents.subscribe("ON_VARIANT_CHANGE",(t=>{this.selectedVariant=this.productJson.variants.find((e=>e.id===Number(t))),this.selectedVariant&&this.selectedVariant.available?(this.selectedVariantId=this.selectedVariant.id,this.classList.remove("soldout")):this.classList.add("soldout");this.getQtyLeft()<this.activeDiscount.min_qty?this.domNodes.submitButton&&this.domNodes.submitButton.setAttribute("disabled",!0):this.domNodes.submitButton&&this.domNodes.submitButton.removeAttribute("disabled"),this.querySelectorAll("foxkit-quantity-breaks-card, foxkit-quantity-breaks-choice, foxkit-quantity-breaks-standard").forEach((t=>t.onChange()))}))}getQuantityToAdd(t){const{items:e=[]}=this.cart||FoxKitV2.cart;let i=0;return e.forEach((({product_id:t,quantity:e})=>t===this.productId&&(i+=e))),t>i?t-i:0}getAddedQuantities(){const t=this.cart.items;let e=0;return t.length&&t.forEach((({product_id:t,quantity:i})=>{t===this.productId&&(e+=i)})),e}async updateButtonStatus(){if(!this.domNodes.buttons.length)return!1;this.cart=await FoxKitV2.getCart(),this.totalAdded=this.getAddedQuantities(),this.config.discounts.forEach((({min_qty:t},e)=>{const i=this.domNodes.buttons[e],s=i.dataset.defaultLabel;this.totalAdded>=t?(i.querySelector("span:not(.foxkit-spinner)").textContent=window.__i18n.tr("added_button"),i.classList.add("added")):(i.querySelector("span:not(.foxkit-spinner)").textContent=s,i.classList.remove("added"))}))}addToCartFromForm(t,e){const i={method:"POST",headers:{Accept:"application/javascript","X-Requested-With":"XMLHttpRequest"}},s=this.productForm?new FormData(this.productForm):new FormData;s.has("quantity")?s.set("quantity",t):s.append("quantity",t),s.has("id")||s.append("id",this.selectedVariantId);const n=generateId(36);s.has("foxKitEventId")||s.append("foxKitEventId",n),this.zCartDrawer&&(s.append("sections",this.zCartDrawer.getSectionsToRender().map((t=>t.id))),s.append("sections_url",window.location.pathname)),this.sCartDrawer&&this.sCartDrawer.getSectionsToRender&&!window.FoxKitSections&&(s.append("sections",this.sCartDrawer.getSectionsToRender().map((t=>t.id))),s.append("sections_url",window.location.pathname)),window.FoxKitSections&&(s.append("sections",window.FoxKitSections),s.append("sections_url",window.location.pathname)),i.body=s,publishWebPixelsEvent({plugin:"QuantityDiscount",pluginId:this.config._id,productId:this.productId,variantId:this.selectedVariantId,foxKitEventId:s.get("foxKitEventId")},WEB_PIXELS_EVENT.ADD_TO_CART),fetch(`${FoxKitSettings.routes.cart_add_url}`,i).then((t=>t.json())).then((async t=>{t.id?(this.updateButtonStatus(),await this.onSuccess(t)):422===t.status&&FoxKitModules.Notification.show({target:this,method:"appendChild",type:"warning",message:t.description||"Cannot add this item to cart"})})).catch((t=>{})).finally((()=>{e&&this.toggleSpinner(e,!1)}))}addMultipleItems(t){const e=generateId(36);if(!t.length)return;const i={items:t,foxKitEventId:e};this.zCartDrawer&&(i.sections=this.zCartDrawer.getSectionsToRender().map((t=>t.id)),i.sections_url=window.location.pathname),this.sCartDrawer&&this.sCartDrawer.getSectionsToRender&&!window.FoxKitSections&&(i.sections=this.sCartDrawer.getSectionsToRender().map((t=>t.id)),i.sections_url=window.location.pathname),window.FoxKitSections&&(i.sections=window.FoxKitSections,i.sections_url=window.location.pathname);const s={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(i)};publishWebPixelsEvent({plugin:"QuantityDiscount",pluginId:this.config._id,productId:this.productId,variantId:this.selectedVariantId,foxKitEventId:e},WEB_PIXELS_EVENT.ADD_TO_CART),fetch(window.Shopify.routes.root+"cart/add.js",s).then((t=>t.json())).then((async t=>{422===t.status?FoxKitModules.Notification.show({target:this,method:"appendChild",type:"warning",message:t.description||"Cannot add this item to cart"}):await this.onSuccess(t)})).catch((t=>{})).finally((()=>{this.toggleSpinner(this.domNodes.submitButton,!1)}))}async onSuccess(t){if(!t)return;if(!FoxKitSettings.enableAjaxAtc)return window.FoxKitV2.goToCart();if(window.MinimogTheme&&this.mCartDrawer&&MinimogSettings.enable_cart_drawer)await this.mCartDrawer.onCartDrawerUpdate(!window.FoxKitV2.hasDiscount),window.FoxKitV2.renderCartSummary(),this.mCartDrawer.open();else if(window.FoxTheme&&this.zCartDrawer)await this.zCartDrawer.renderContents(t),window.FoxKitV2.renderCartSummary();else if(this.sCartDrawer&&!window.FoxKitSections)this.sCartDrawer.renderContents&&this.sCartDrawer.renderContents(t),this.sCartDrawer.classList.remove("is-empty");else{const e=t.product_title||t.items[0]?.product_title||"";FoxKitModules.Notification.show({target:this,method:"appendChild",type:"success",message:window.__i18n.tr("item_added_to_cart",{product_title:e})})}const e=t.items?t.items[0]:t;window.FoxKitV2.Helpers.triggerCartUpdate(e),window.FoxKitV2.updateCartCount()}handleChange(t){const e=t.target;if(e&&"radio"===e.type){const t=Number(e.value);this.selectedIndex=t,this.activeDiscount=this.config.discounts[t],this.updateQuantity(),this.domNodes.submitButton&&this.domNodes.submitButton.removeAttribute("disabled")}}handleSubmit(t){if(t.preventDefault(),this.domNodes.submitButton.classList.add(this.classes.loading),"rich"===this.config.layout&&this.config.show_variant_selector){const t=this.domNodes.choices[this.selectedIndex],e=t?t.selectedItems:[];this.addMultipleItems(e)}else this.atcButton=this.atcButton||this.productForm&&this.productForm.querySelector(FoxKitV2.selectors.atcButton),this.atcButton?this.atcButton.click():this.addToCartFromForm(this.activeDiscount.min_qty)}updateQuantity(){if(!this.activeDiscount||!this.productForm)return;const t=this.productForm.getAttribute("id")||"";let e=this.productForm.querySelector('input[name="quantity"]')||document.querySelector(`[name="quantity"][form="${t}"]`);e||(e=this.renderQuantityInput(),this.productForm.appendChild(e)),e.value=this.activeDiscount.min_qty}formatTitle(t,e){const i=this.config.default_title?window.__i18n.transPlugin({configs:this.config,key:"default_title"}):window.__i18n.tr("qty_discount_title"),{moneyFormat:s}=FoxKitSettings,n=this.selectedVariant.price,a=Number(window.Shopify.currency.rate||1),o=this.getDiscountValue(t),r=t.title||i,c=this.getDiscount(t,n);return window.__i18n.transPlugin({configs:this.config,key:`discount_titles.${e}`,_params:{item_count:t.min_qty,quantity:t.min_qty,discount_value:o,discount_total:FoxKitV2.Utils.formatMoney(c.discountTotal*a,s),discount_each:FoxKitV2.Utils.formatMoney(c.discountEach*a,s),price_each:FoxKitV2.Utils.formatMoney(c.priceEach*a,s),price_total:FoxKitV2.Utils.formatMoney(c.priceTotal*a,s)},defaultValue:r})}getDiscount(t,e){const i=parseInt(t.min_qty);let s=0,n=0,a=0,o=e*i;return"PERCENTAGE"===t.type?(n=e-e*t.value/100,a=e*t.value/100*i,s=n*i):(n=e-t.value,a=t.value*i,s=n*i),{priceEach:n,priceTotal:s,discountTotal:a,priceMax:o}}toggleSpinner(t,e){if(!t)return;const i=e?"add":"remove";this.classList[i](this.classes.adding),t.classList[i](this.classes.loading)}renderComponent(){const{layout:t="standard",discounts:e}=this.config,i=document.createElement("div");i.classList.add("f-quantity-breaks__wrapper",`f-quantity-breaks--${t}`);let s="",n="",a="f-quantity-breaks__list";switch(t){case"rich":s=this.renderLayoutRich();break;case"card":s=this.renderLayoutCards(),a="f-quantity-breaks__cards",e.length>3&&(a+=" foxkit-scroll--horizontal");break;default:s=this.renderLayoutStandard()}return("rich"===t||"card"===t&&!this.config.hide_submit_button)&&(n=`<div class="f-quantity-breaks__button">\n             <button class="foxkit-button foxkit-button--primary f-quantity-breaks__button-add">\n                ${this.getSpinnerHtml()}\n                <span>${window.__i18n.transPlugin({configs:this.config,key:"button_label"})||"Add to cart"}</span>\n              </button>\n          </div>`),i.innerHTML=`<h3 class="f-quantity-breaks__heading">${window.__i18n.transPlugin({configs:this.config,key:"offer_heading"})}</h3>\n          <div class="${a}">\n            ${s}\n          </div>\n          ${n}\n        `,i}renderQuantityInput(){const t=document.createElement("input");return t.type="hidden",t.name="quantity",t.classList.add("foxkit-quantity-input"),t}getSaleBadgeHtml(t,e){const i=window.__i18n.transPlugin({configs:this.config,key:"sale_badge"})||"Save {discount_value}",{moneyFormat:s}=FoxKitSettings;e||(e=this.selectedVariant.price);const n=this.getDiscount(t,e),a=Number(window.Shopify.currency.rate||1),o=this.getDiscountValue(t);return`\n          <div class="f-quantity-breaks__sale-badge">${window.__i18n.transPlugin({configs:this.config,key:"sale_badge",_params:{item_count:t.min_qty,quantity:t.min_qty,discount_value:o,discount_total:FoxKitV2.Utils.formatMoney(n.discountTotal*a,s),discount_each:FoxKitV2.Utils.formatMoney(n.discountEach*a,s),price_each:FoxKitV2.Utils.formatMoney(n.priceEach*a,s),price_total:FoxKitV2.Utils.formatMoney(n.priceTotal*a,s)},defaultValue:i})}</div>\n        `}getSubtitleHtml(t,e){if(!this.config.sub_title&&!window.__i18n.tr("qty_discount_note"))return"";const{moneyFormat:i}=FoxKitSettings;e||(e=this.selectedVariant.price);const s=this.getDiscount(t,e),n=Number(window.Shopify.currency.rate||1),a=this.getDiscountValue(t);return this.config.sub_title?`\n            <span class="f-quantity-breaks__subtitle">${window.__i18n.transPlugin({configs:this.config,key:"sub_title",_params:{item_count:t.min_qty,quantity:t.min_qty,discount_value:a,discount_total:FoxKitV2.Utils.formatMoney(s.discountTotal*n,i),discount_each:FoxKitV2.Utils.formatMoney(s.discountEach*n,i),price_each:FoxKitV2.Utils.formatMoney(s.priceEach*n,i),price_total:FoxKitV2.Utils.formatMoney(s.priceTotal*n,i)}})}</span>\n          `:`\n          <span class="f-quantity-breaks__subtitle">${window.__i18n.tr("qty_discount_note",{item_count:t.min_qty,quantity:t.min_qty,discount_value:a,discount_total:FoxKitV2.Utils.formatMoney(s.discountTotal*n,i),discount_each:FoxKitV2.Utils.formatMoney(s.discountEach*n,i),price_each:FoxKitV2.Utils.formatMoney(s.priceEach*n,i),price_total:FoxKitV2.Utils.formatMoney(s.priceTotal*n,i)})}</span>\n        `}getPopularBadgeHtml(){return window.__i18n.transPlugin({configs:this.config,key:"highlight_label"})?`\n          <div class="f-quantity-breaks__badge f-quantity-breaks__popular-badge">${window.__i18n.transPlugin({configs:this.config,key:"highlight_label"})}</div>\n        `:""}getPricesHtml(t,e){if(!t||!this.selectedVariant)return"";const{moneyFormat:i}=window.FoxKitSettings;e||(e=this.selectedVariant.price);const s=this.getDiscount(t,e);return`\n            <div class="f-quantity-breaks__prices">\n                <span>${FoxKitV2.Utils.formatMoney(s.priceTotal,i)}</span>\n                <del>${FoxKitV2.Utils.formatMoney(s.priceMax,i)}</del>\n            </div>\n        `}getSelectVariantsHtml(t){const e=t.min_qty;if(this.productJson.has_only_default_variant)return"";let i="";return[...Array(e)].map(((t,e)=>{i+=`\n            <div class="f-quantity-breaks__choice-select">\n              <span>#${e+1}</span>\n              <select class="foxkit-select">\n                ${this.productJson.variants.map((t=>t.available?`<option label="${t.title}" value="${t.id}"${this.selectedVariantId===t.id?"selected":""}>${t.title}</option>`:`<option disabled label="${t.title}" value="${t.id}">${t.title}</option>`))}\n              </select>\n            </div>\n          `})),`<div class="f-quantity-breaks__choice-variants">${i}</div>`}getSpinnerHtml(){return'<span class="foxkit-spinner">\n                <svg xmlns="http://www.w3.org/2000/svg"\n                     viewBox="0 0 24 24" fill="none">\n                  <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4" />\n                  <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z" />\n                </svg>\n              </span>'}getDiscount(t,e){const i=parseInt(t.min_qty);let s=0,n=0,a=0,o=0,r=e*i;return"PERCENTAGE"===t.type?(n=e-e*t.value/100,o=e*t.value/100):(n=e-100*t.value,o=100*t.value),a=o*i,s=n*i,{priceEach:n,priceTotal:s,discountTotal:a,priceMax:r,discountEach:o}}getDiscountValue(t){const{type:e,value:i}=t,{moneyFormat:s}=FoxKitSettings,n=Number(window.Shopify.currency.rate||1);return"PERCENTAGE"===e?`${i}%`:FoxKitV2.Utils.formatMoney(100*i*n,s)}getQtyLeft(){const{inventory_management:t,inventory_policy:e,inventory_quantity:i}=this.selectedVariant;return"shopify"===t&&"deny"===e?i:9999}renderLayoutStandard(){let t="";const e=this.getPopularBadgeHtml(),{discounts:i}=this.config;return i.forEach(((i,s)=>{const n=this.formatTitle(i,s),a=this.getSubtitleHtml(i);t+=`\n          <foxkit-quantity-breaks-standard class="f-quantity-breaks__product" data-index="${s}">\n            <div class="f-quantity-breaks__product-info">\n              ${i.highlighted?e:""}\n              <h4 class="f-quantity-breaks__card-title">${n}</h4>\n              ${a}\n            </div>\n            <button\n              data-quantity="${i.min_qty}"\n              class="foxkit-button foxkit-button--secondary btn-add"\n              data-default-label="${window.__i18n.transPlugin({configs:this.config,key:"button_label"})||window.__i18n.tr("add_button")||"Add"}"\n            >\n              <svg xmlns="http://www.w3.org/2000/svg" width="15" height="11" fill="none" viewBox="0 0 15 11"><path fill="#868686" d="M12.7734.306641c.1563-.15625.3223-.15625.4981 0l.8203.849609c.1758.15625.1758.32227 0 .49805l-8.78907 8.7891c-.15625.1562-.32226.1562-.49804 0L.908203 6.51758c-.175781-.15625-.175781-.32227 0-.49805l.820317-.82031c.17578-.17578.34179-.17578.49804 0l2.8418 2.8418L12.7734.306641z"/></svg>\n              ${this.getSpinnerHtml()}\n              <span>${window.__i18n.transPlugin({configs:this.config,key:"button_label"})||window.__i18n.tr("add_button")||"Add"}</span>\n            </button>\n          </foxkit-quantity-breaks-standard>`})),t}renderLayoutCards(){let t="";const{discounts:e,default_selected:i=0}=this.config,s=this.getQtyLeft();return e.forEach(((e,n)=>{const a=this.getSaleBadgeHtml(e),o=this.formatTitle(e,n),r=this.getPricesHtml(e),c=`foxkit-volume-${this.blockId}`;let d;d=s<this.activeDiscount.min_qty?0===n:n===i,d&&(this.selectedIndex=n),t+=`\n          <foxkit-quantity-breaks-card class="f-quantity-breaks__card" data-index="${n}">\n            <input type="radio" id="${c}-${n}" name="${c}" value="${n}"${d?" checked":""}>\n            <label class="f-quantity-breaks__card-inner" for="${c}-${n}">\n              <div class="f-quantity-breaks__card-badge">\n                ${a}\n              </div>\n              <div class="f-quantity-breaks__card-info">\n                <div class="f-quantity-breaks__card-prices">\n                  ${r}\n                </div>\n                <h4 class="f-quantity-breaks__card-title">${o}</h4>\n                ${e.highlighted?this.getPopularBadgeHtml():""}\n              </div>\n            </label>\n          </foxkit-quantity-breaks-card>`})),t}renderLayoutRich(){let t="";const{discounts:e,default_selected:i=0}=this.config,s=this.getQtyLeft();return e.forEach(((e,n)=>{const a=this.getSaleBadgeHtml(e),o=this.formatTitle(e,n),r=this.getPricesHtml(e),c=`foxkit-volume-${this.blockId}`;let d;d=s<this.activeDiscount.min_qty?0===n:n===i,d&&(this.selectedIndex=n);let l="f-quantity-breaks__choice";e.highlighted&&(l+=" f-quantity-breaks__choice--highlighted"),!this.productJson.has_only_default_variant&&this.config.show_variant_selector&&(l+=" f-quantity-breaks__choice--show-variants"),t+=`\n          <foxkit-quantity-breaks-choice class="${l}" data-index="${n}">\n            <input type="radio" id="${c}-${n}" name="${c}" value="${n}"${d?" checked":""}>\n            <label class="f-quantity-breaks__choice-inner" for="${c}-${n}">\n              <div class="f-quantity-breaks__choice-info">\n                <span class="f-quantity-breaks__choice-check"></span>\n                ${e.highlighted?this.getPopularBadgeHtml():""}\n                <div class="f-quantity-breaks__choice-title-wrapper">\n                  <h4 class="f-quantity-breaks__choice-title">${o}</h4>\n                  <div class="f-quantity-breaks__badge f-quantity-breaks__badge--sale">\n                    ${a}\n                  </div>\n                </div>\n                ${this.config.show_variant_selector?this.getSelectVariantsHtml(e):""}\n              </div>\n              <div class="f-quantity-breaks__choice-prices">\n                ${r}\n              </div>\n            </label>\n          </foxkit-quantity-breaks-choice>`})),t}updateTitles(){const t=this.querySelectorAll(".f-quantity-upsell__product-info > h4");this.config.discounts.forEach(((e,i)=>{const s=this.formatTitle(e);t[i].innerHTML=s}))}renderWtm(){const t=document.createElement("div");t.classList.add("foxkit-watermark");t.innerHTML="Powered by <a href=https://apps.shopify.com/foxkit?utm_source=merchant_store&utm_medium=VolumeDiscounts&utm_campaign=brandmark target='_blank'>FoxKit: All-in-one Sales Boost</a>",this.appendChild(t)}destroyElement(){const t=this.closest(".shopify-block");t&&t.remove()}}),!customElements.get("foxkit-quantity-breaks-card")){class t extends HTMLElement{constructor(){super()}connectedCallback(){this.container=this.closest("foxkit-quantity-breaks"),this.discount=this.container.config.discounts[Number(this.dataset.index)],this.pricesNode=this.querySelector(".f-quantity-breaks__card-prices"),this.saleBadgeNode=this.querySelector(".f-quantity-breaks__card-badge"),this.titleNode=this.querySelector(".f-quantity-breaks__card-title"),this.subTitleNode=this.querySelector(".f-quantity-breaks__subtitle"),this.checkQuantityRule()}onChange(){this.pricesNode&&(this.pricesNode.innerHTML=this.container.getPricesHtml(this.discount)),this.saleBadgeNode&&(this.saleBadgeNode.innerHTML=this.container.getSaleBadgeHtml(this.discount)),this.titleNode&&(this.titleNode.innerHTML=this.container.formatTitle(this.discount,this.dataset.index)),this.subTitleNode&&(this.subTitleNode.innerHTML=this.container.getSubtitleHtml(this.discount)),this.checkQuantityRule()}checkQuantityRule(){const t=this.container&&this.container.getQtyLeft()||0;t&&t<this.discount.min_qty?this.setAttribute("disabled",!0):this.removeAttribute("disabled")}}customElements.define("foxkit-quantity-breaks-card",t),customElements.define("foxkit-quantity-breaks-standard",class extends t{constructor(){super()}})}customElements.get("foxkit-quantity-breaks-choice")||customElements.define("foxkit-quantity-breaks-choice",class extends HTMLElement{constructor(){super()}connectedCallback(){this.container=this.closest("foxkit-quantity-breaks"),this.discount=this.container.config.discounts[Number(this.dataset.index)],this.variantSelects=this.querySelectorAll("select"),this.pricesNode=this.querySelector(".f-quantity-breaks__choice-prices"),this.saleBadgeNode=this.querySelector(".f-quantity-breaks__choice-badge"),this.variantNode=this.querySelector(".f-quantity-breaks__choice-variants"),this.variant=this.container.selectedVariant,this.selectedItems=[],this.totalPrice=0,this.checkQuantityRule(),this.updateSelectedItems(),this.addEventListener("change",this.handleChange.bind(this)),this.style.setProperty("--foxkit-variant-max-height",this.variantNode?.scrollHeight)}disconnectedCallback(){this.removeEventListener("change",this.handleChange.bind(this))}handleChange(t){"SELECT"===t.target.tagName&&(this.updateSelectedItems(),this.updatePrices())}onChange(){this.variant=this.container?.selectedVariant,this.variant&&(this.variantSelects.length&&this.variantSelects.forEach((t=>{t.value=this.variant.id})),this.checkQuantityRule(),this.updatePrices())}updatePrices(){this.variants=this.variants||this.container.productJson.variants||[],this.totalPrice=this.selectedItems.reduce(((t,e)=>t+this.variants.find((t=>t.id==e.id)).price*e.quantity),0),this.pricesNode&&(this.pricesNode.innerHTML=this.container.getPricesHtml(this.discount,this.totalPrice/this.discount.min_qty)),this.saleBadgeNode&&(this.saleBadgeNode.innerHTML=this.container.getSaleBadgeHtml(this.discount,this.totalPrice/this.discount.min_qty))}checkQuantityRule(){const t=this.container&&this.container.getQtyLeft()||0;t&&t<this.discount.min_qty?this.setAttribute("disabled",!0):this.removeAttribute("disabled")}updateSelectedItems(){Array.from(this.querySelectorAll("select")).length?this.selectedItems=Array.from(this.querySelectorAll("select")).map((t=>({id:t.value,quantity:1}))).reduce(((t,e)=>{const i=t.find((t=>t.id===e.id));return i?i.quantity+=e.quantity:t.push({id:e.id,quantity:e.quantity}),t}),[]):this.selectedItems=[{id:this.variant.id,quantity:this.discount.min_qty}]}});